SECTION-1 (HTML assignments) - Steps to follow:

1.First take a backup of your assignments & projects. This is required because due to incorrect GIT operation you may lose your files.
2.Create an empty directory ‘Assignments’ & cd to ‘Assignments’.
$mkdir assignments
$cd assignments

3.Create a file README.txt inside ‘Assignments’ & write few lines about the contents of ‘Assignments’ folder.
$touch README.txt
$vi README.txt

4.Commit README.txt file.
$git commit -am "few lines changed first"

5.Now create a new branch ‘html-assignments’.
$git branch html-assignments

6.Switch to ‘html-assignments’ branch.git status
$git checkout html-assignments

7.Copy all HTML assignments inside ‘Assignments’ folder.
8.Commit HTML assignments into ‘html-assignments’ branch.

9.Make minor changes into few files belonging to ‘html-assignments’ branch.
10.Commit those changed files.
$git commit -am "few lines changed in branch first"

11.Switch to master branch.
$git checkout master

12.Make minor changes into README.txt file & commit those changes into master.
$vi README.txt
$git commit -am "few lines changed in master second"

13.Again switch to ‘html-assignments’ branch.
$git checkout html-assignments

14.Make minor changes into few files belonging to ‘html-assignments’ branch.


15.Commit those changes.
$git commit -am "few lines changed in branch second"

16.Switch to master.
$git checkout master

17.Merge ‘html-assignments’ branch into master. Confirm all html assignments are shown in master.
$ git merge html-assignments

18.Finally delete the ‘html-assignments’ branch.
$ git branch -d html-assignments


SECTION-2 - (CSS assignments) Steps to follow:

1.Create a new branch ‘css-assignments’.
$ git branch css-assignments

2.Switch to ‘css-assignments’ branch.
$ git checkout css-assignments

3.Copy all CSS assignments inside ‘Assignments’ folder.
4.Commit CSS assignments into ‘css-assignments’ branch.
$ git add .
$ git commit "first commit of css"

5.Make minor changes into README.txt file on line 1 belonging to ‘css-assignments’ branch.
$vi README.txt

6.Commit those changed files.
$ git add .
$ git commit "first commit of readme file"

7.Switch to master branch.
$git checkout master

8.Make minor changes into README.txt file on line 3 & commit those changes into master.
$vi README.txt

9.Again switch to ‘css-assignments’ branch.
$ git checkout css-assignments

10.Make minor changes into few files belonging to ‘css-assignments’ branch.
11.Commit those changes.
$ git add .
$ git commit "second commit of css"

12.Switch to master.
$git checkout master

13.Merge ‘css-assignments’ branch into master. Confirm all css assignments are shown in master.
$git merge css-assignments

14.Finally delete the ‘css-assignments’ branch.
$$ git branch -d css-assignments


SECTION-3 - (JavaScript assignments) Steps to follow:

1.Create a new branch ‘js-assignments’.
$ git branch js-assignments

2.Switch to ‘js-assignments’ branch.
$ git checkout js-assignments

3.Copy all JavaScript assignments inside ‘Assignments’ folder.
4.Commit JavaScript assignments into ‘js-assignments’ branch.
$ git add .
$ git commit "first commit of js"

5.Make minor changes into README.txt file on line 1 belonging to ‘js-assignments’ branch.
$vi README.txt

6.Commit those changed files.
$ git add .
$ git commit "first commit of readme file"

7.Switch to master branch.
$git checkout master

8.Make minor changes into README.txt file on line 1 & commit those changes into master.
$vi README.txt

9.Again switch to ‘js-assignments’ branch.
$git checkout js-assignments

10.Make minor changes into few files belonging to ‘js-assignments’ branch.

11.sCommit those changes.
$ git add .
$ git commit "second commit of js"

12.Switch to master.
$git checkout master

13.Merge ‘js-assignments’ branch into master. Confirm all JavaScript assignments are shown in master.
$git merge js-assignments

14.Finally delete the ‘js-assignments’ branch.
$$ git branch -d js-assignments


